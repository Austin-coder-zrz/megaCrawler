
	import (
    	"megaCrawler/crawlers"
        "strings"
        "github.com/gocolly/colly/v2"
    )

    func init() {
    	w := Crawler.Register("cprindia", "印度政策研究中心", "https://cprindia.org/")

    	w.SetStartingUrls([]string{"https://cprindia.org/sitemap_index.xml"})

	// 从翻页器获取链接并访问
	w.OnHTML("", func(element *colly.HTMLElement, ctx *Crawler.Context) {
		w.Visit(element.Attr("href"), Crawler.Index)
	})

	// 从index访问新闻
	w.OnHTML("", func(element *colly.HTMLElement, ctx *Crawler.Context) {
		w.Visit(element.Attr("href"), Crawler.News)
	})



	// report.title
	w.OnHTML("", func(element *colly.HTMLElement, ctx *Crawler.Context) {
		ctx.Title = element.Text
	})
	// report.title
	w.OnHTML("", func(element *colly.HTMLElement, ctx *Crawler.Context) {
		ctx.Title = element.Text
	})


	// report .content
	w.OnHTML("", func(element *colly.HTMLElement, ctx *Crawler.Context) {
		ctx.Content = element.Text
	})
	//report.publish time
	w.OnHTML("", func(element *colly.HTMLElement, ctx *Crawler.Context) {
		ctx.PublicationTime = element.Text
	})


	// report.description
	w.OnHTML("", func(element *colly.HTMLElement, ctx *Crawler.Context) {
		ctx.Description = element.Text
	})

	// report.author
	w.OnHTML("", func(element *colly.HTMLElement, ctx *Crawler.Context) {
		ctx.Authors = append(ctx.Authors, element.Text)
	})


	//内含Expert
	w.OnHTML("", func(element *colly.HTMLElement, ctx *Crawler.Context) {
		w.Visit(element.Attr("href"), Crawler.Expert)
	})
	// expert.Name
	w.OnHTML("", func(element *colly.HTMLElement, ctx *Crawler.Context) {
		ctx.Name = element.Text
	})
	// expert.title
	w.OnHTML("", func(element *colly.HTMLElement, ctx *Crawler.Context) {
		ctx.Title = element.Text
	})
	// expert.description
	w.OnHTML("", func(element *colly.HTMLElement, ctx *Crawler.Context) {
		ctx.Content = element.Text
	})
	// expert.link
	w.OnHTML("", func(element *colly.HTMLElement, ctx *Crawler.Context) {
		ctx.Link = append(ctx.Link, element.Attr("href"))
	})
